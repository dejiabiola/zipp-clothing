{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInFailure, signInSuccess, CHECK_USER_SESSIONS, SIGN_OUT_START, signOutSuccess, signOutFailure, SIGN_UP_START, signUpSuccess, signUpFailure, SIGN_UP_SUCCESS } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* SignInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isAunthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUpWithEmail({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    // use the firebase auth create object to create a new user object and destructure it from its parent\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  // pass the user object to create user profile function to store it in the database\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSIONS, isAunthenticated);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, SignInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* onSignOutstart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUpWithEmail);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutstart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","signInFailure","signInSuccess","CHECK_USER_SESSIONS","SIGN_OUT_START","signOutSuccess","signOutFailure","SIGN_UP_START","signUpSuccess","signUpFailure","SIGN_UP_SUCCESS","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShotFromUserAuth","user","additionalData","userRef","userSnapshot","get","id","data","error","SignInWithGoogle","signInWithPopup","SignInWithEmail","payload","email","password","signInWithEmailAndPassword","isAunthenticated","userAuth","signOut","signUpWithEmail","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onCheckUserSession","onGoogleSignInStart","onEmailSignInStart","onSignOutstart","onSignUpStart","onSignUpSuccess","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInFailure, signInSuccess, \n  CHECK_USER_SESSIONS, SIGN_OUT_START, signOutSuccess, signOutFailure, SIGN_UP_START, signUpSuccess, signUpFailure, SIGN_UP_SUCCESS } from './user.action'\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser  } from '../../firebase/firebase.utils'\n\n\nexport function* getSnapShotFromUserAuth(user, additionalData) {\n  try{\n    const userRef = yield call(createUserProfileDocument, user, additionalData)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* SignInWithGoogle() { \n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\n\nexport function* SignInWithEmail({ payload: { email, password }}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* isAunthenticated() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return\n    yield getSnapShotFromUserAuth(userAuth)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess())\n  } catch(error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nexport function* signUpWithEmail({payload: { email, password, displayName }}) {\n  try {\n    // use the firebase auth create object to create a new user object and destructure it from its parent\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n    \n\n    yield put(signUpSuccess({ user, additionalData: { displayName } }))\n  } catch (error) {\n    yield put(signUpFailure(error))\n  }\n}\n\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\n    // pass the user object to create user profile function to store it in the database\n    yield getSnapShotFromUserAuth(user, additionalData)\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSIONS, isAunthenticated)\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, SignInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, SignInWithEmail)\n}\n\nexport function* onSignOutstart() {\n  yield takeLatest(SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUpWithEmail)\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp) \n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutstart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n  ])\n} "]},"metadata":{},"sourceType":"module"}