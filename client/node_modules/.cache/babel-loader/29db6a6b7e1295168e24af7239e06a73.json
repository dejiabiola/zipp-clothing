{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInFailure, signInSuccess } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* SignInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, SignInWithGoogle);\n}\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","signInFailure","signInSuccess","auth","googleProvider","createUserProfileDocument","getSnapShotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","SignInWithGoogle","signInWithPopup","onGoogleSignInStart","SignInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,EAAoDC,aAApD,EAAmEC,aAAnE,QAAwF,eAAxF;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,IAAlC,EAAwC;AAC7C,MAAG;AACD,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACO,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACM,aAAa,CAAC;AAAES,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAArB;AACA,UAAME,uBAAuB,CAACC,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUG,mBAAV,GAAgC;AACrC,QAAMrB,UAAU,CAACI,oBAAD,EAAuBe,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUG,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAChE,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACC,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACK,mBAAD,EAAsBiB,eAAtB,CAAhB;AACD;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAM1B,GAAG,CAAC,CACRC,IAAI,CAACkB,mBAAD,CADI,EAERlB,IAAI,CAACwB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInFailure, signInSuccess } from './user.action'\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\n\nexport function* getSnapShotFromUserAuth(user) {\n  try{\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* SignInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, SignInWithGoogle)\n}\n\nexport function* SignInWithEmail({ payload: { email, password }}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, SignInWithEmail)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ])\n} "]},"metadata":{},"sourceType":"module"}