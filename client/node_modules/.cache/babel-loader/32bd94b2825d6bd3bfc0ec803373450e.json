{"ast":null,"code":"var _jsxFileName = \"/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/components/sign-up/SignUp.js\";\nimport React, { useState } from 'react';\nimport './sign-up.scss';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport PropTypes from 'prop-types';\nimport { signUpStart } from '../../redux/user/user.action';\nimport { connect } from 'react-redux';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    // Async function that will register the user details in the firebase db\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Sign up\")));\n};\n\nSignUp.propTypes = {\n  signUpStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userDetails => dispatch(signUpStart(userDetails))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/components/sign-up/SignUp.js"],"names":["React","useState","FormInput","CustomButton","PropTypes","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","propTypes","func","isRequired","mapDispatchToProps","dispatch","userDetails"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './sign-up.scss'\nimport FormInput from '../form-input/FormInput'\nimport CustomButton from '../custom-button/CustomButton'\nimport PropTypes from 'prop-types'\nimport { signUpStart } from '../../redux/user/user.action'\nimport { connect } from 'react-redux'\n\nconst SignUp = ({ signUpStart }) => {\n  const [ userCredentials, setUserCredentials ] = useState({ displayName: '', email: '', password: '', confirmPassword: '' })\n  const { displayName, email, password, confirmPassword } = userCredentials\n\n  const handleSubmit = async (event) => {\n    // Async function that will register the user details in the firebase db\n    event.preventDefault()\n    if (password !== confirmPassword) {\n      alert('passwords don\\'t match')\n      return;\n    }\n    signUpStart({email, password, displayName})\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setUserCredentials({ ...userCredentials, [name]: value })\n  }\n\n\n  return (\n    <div className='sign-up'>\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign up with your email and password</span>\n      <form className='sign-up-form' onSubmit={handleSubmit}>\n        <FormInput \n          type='text'\n          name='displayName'\n          value={displayName}\n          handleChange={handleChange}\n          label='Display Name'\n          required\n        />\n        <FormInput \n          type='email'\n          name='email'\n          value={email}\n          handleChange={handleChange}\n          label='Email'\n          required\n        />\n        <FormInput \n          type='password'\n          name='password'\n          value={password}\n          handleChange={handleChange}\n          label='Password'\n          required\n        />\n        <FormInput \n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          handleChange={handleChange}\n          label='Confirm Password'\n          required\n        />\n        <CustomButton type='submit'>\n          Sign up\n        </CustomButton>\n      </form>\n    </div>\n  );\n\n}\n\nSignUp.propTypes = {\n  signUpStart: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userDetails) => dispatch(signUpStart(userDetails))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}