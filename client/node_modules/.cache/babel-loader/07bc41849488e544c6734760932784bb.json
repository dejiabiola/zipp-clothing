{"ast":null,"code":"import { createSelector } from 'reselect'; // Input selector like below only return a piece of the state\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.price * cartItem.quantity, 0));","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CE,IAAD,IAAUA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,mBAAmB,GAAGR,cAAc,CAC/C,CAACI,eAAD,CAD+C,EAE9CC,SAAD,IAAeA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAnF,EAA6F,CAA7F,CAFgC,CAA1C;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE1CC,SAAD,IAAeA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAIC,QAAQ,CAACG,KAAT,GAAiBH,QAAQ,CAACC,QAArG,EAAgH,CAAhH,CAF4B,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\n\n// Input selector like below only return a piece of the state\nconst selectCart = state => state.cart\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden\n)\n\nexport const selectCartItemCount = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + (cartItem.price * cartItem.quantity), 0)\n)"]},"metadata":{},"sourceType":"module"}