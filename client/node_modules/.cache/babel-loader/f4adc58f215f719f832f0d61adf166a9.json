{"ast":null,"code":"var _jsxFileName = \"/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/components/sign-in/SignIn.js\";\nimport React, { Component } from 'react';\nimport './sign-in.scss';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport PropTypes from 'prop-types';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      console.log(email, password);\n      this.props.emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nSignIn.propTypes = {\n  googleSignInStart: PropTypes.func.isRequired,\n  emailSignInStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/components/sign-in/SignIn.js"],"names":["React","Component","FormInput","CustomButton","PropTypes","googleSignInStart","emailSignInStart","connect","SignIn","state","email","password","handleSubmit","event","preventDefault","console","log","props","handleChange","value","name","target","setState","render","propTypes","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './sign-in.scss'\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport PropTypes from 'prop-types'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault()\n    const { email, password } = this.state\n    console.log(email, password)\n    this.props.emailSignInStart(email, password)\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    const { googleSignInStart } = this.props;\n    return (\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n        <form onSubmit={this.handleSubmit}>\n          <FormInput type=\"email\" \n            name='email' \n            value={this.state.email} \n            required \n            handleChange={this.handleChange}\n            label='Email'\n          />\n\n          <FormInput \n            type=\"password\" \n            name='password' \n            value={this.state.password} \n            required \n            handleChange={this.handleChange}\n            label='Password'  \n          />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\">\n              Sign in\n            </CustomButton>\n            <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  googleSignInStart: PropTypes.func.isRequired,\n  emailSignInStart: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart : () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}