{"ast":null,"code":"var _jsxFileName = \"/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/pages/shop-page/ShopPage.js\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../../components/collection/Collection';\nimport { firestore, convertCollectionToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unSubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    this.unSubscribeFromSnapShot = collectionRef.onSnapshot(async snapShot => {\n      const collectionsMap = convertCollectionToMap(snapShot);\n      this.props.updateCollections(collectionsMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({}, props, {\n        isLoading: isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/pages/shop-page/ShopPage.js"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","isLoading","unSubscribeFromSnapShot","componentDidMount","collectionRef","collection","onSnapshot","snapShot","collectionsMap","props","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,SAAT,EAAoBC,sBAApB,QAAkD,+BAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BY,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE;AADL,KADuB;AAAA,SAI/BC,uBAJ+B,GAIL,IAJK;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,cAAc,GAAGf,sBAAsB,CAACc,QAAD,CAA7C;AACA,WAAKE,KAAL,CAAWd,iBAAX,CAA6Ba,cAA7B;AACA,WAAKE,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAN8B,CAA/B;AAOD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKH,KAAvB;AACA,UAAM;AAAER,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AACE,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,8BAAD,oBAAoCA,KAApC;AAA2C,QAAA,SAAS,EAAER,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AACE,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAER;AAAtC,SAAqDQ,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAUD;;AA/B8B;;AAkCjC,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,iBAAiB,EAAGa,cAAD,IAAoBO,QAAQ,CAACpB,iBAAiB,CAACa,cAAD,CAAlB;AAD1C,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview'\nimport { Route } from 'react-router-dom'\nimport CollectionPage from '../../components/collection/Collection'\nimport { firestore, convertCollectionToMap } from '../../firebase/firebase.utils'\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/WithSpinner'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends Component {\n  state = {\n    isLoading: true\n  }\n  unSubscribeFromSnapShot = null\n  \n  componentDidMount() {\n    const collectionRef = firestore.collection('collections')\n\n    this.unSubscribeFromSnapShot = collectionRef.onSnapshot(async snapShot => {\n      const collectionsMap = convertCollectionToMap(snapShot)\n      this.props.updateCollections(collectionsMap)\n      this.setState({\n        isLoading: false\n      })\n    })\n  }\n  \n  render() {\n    const { match } = this.props\n    const { isLoading } = this.state\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`}\n          render={(props) => <CollectionsOverviewWithSpinner {...props} isLoading={isLoading} />} \n        />\n        <Route path={`${match.path}/:collectionId`}\n          render={(props) => <CollectionPageWithSpinner isLoading={isLoading} {...props} />}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage)\n\n"]},"metadata":{},"sourceType":"module"}