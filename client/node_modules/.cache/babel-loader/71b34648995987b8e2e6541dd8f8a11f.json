{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInFailure, signInSuccess, CHECK_USER_SESSIONS, SIGN_OUT_START, signOutSuccess, signOutFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* SignInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isAunthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSIONS, isAunthenticated);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, SignInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* onSignOutstart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["/Users/adedejiabiola/Desktop/frontend/udemy-react/zipp-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","signInFailure","signInSuccess","CHECK_USER_SESSIONS","SIGN_OUT_START","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","SignInWithGoogle","signInWithPopup","SignInWithEmail","payload","email","password","signInWithEmailAndPassword","isAunthenticated","userAuth","signOut","onCheckUserSession","onGoogleSignInStart","onEmailSignInStart","onSignOutstart","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInFailure, signInSuccess, CHECK_USER_SESSIONS, SIGN_OUT_START, signOutSuccess, signOutFailure } from './user.action'\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\n\n\nexport function* getSnapShotFromUserAuth(user) {\n  try{\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* SignInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\n\nexport function* SignInWithEmail({ payload: { email, password }}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* isAunthenticated() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return\n    yield getSnapShotFromUserAuth(userAuth)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess())\n  } catch(error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSIONS, isAunthenticated)\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, SignInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, SignInWithEmail)\n}\n\nexport function* onSignOutstart() {\n  yield takeLatest(SIGN_OUT_START, signOut)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession)\n  ])\n} "]},"metadata":{},"sourceType":"module"}